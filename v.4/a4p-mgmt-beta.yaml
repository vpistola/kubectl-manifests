apiVersion: v1
kind: Service
metadata:
  name: a4p-mgmt-service-beta
  namespace: testing
  labels:
    app: a4p-mgmt-beta
spec:
  type: NodePort
  ports:
    - port: 9055           # This is the port the service will be available on
      targetPort: 80       # The container port the service will forward to
      nodePort: 32660      # The service will be accessible through this port of each of the cluster nodes
  selector:
    app: a4p-mgmt-beta
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: a4p-mgmt-beta-deploy
  namespace: testing
  labels:
    app: a4p-mgmt-beta
spec:
  replicas: 1
  selector:
    matchLabels:
      app: a4p-mgmt-beta
  template:
    metadata:
      labels:
        app: a4p-mgmt-beta
    spec:
      containers:
      - name: a4p-mgmt-beta
        image: registry.gitlab.com/isr-lab/agro4plus-mng/main:f3f39784   # 5 months ago
        env:
          - name: ENVIRONMENT
            valueFrom:
              secretKeyRef:
                name: a4p-mgmt-secret
                key: environment
                optional: false
          - name: HOST
            valueFrom:
              secretKeyRef:
                name: a4p-mgmt-secret
                key: host
                optional: false
          - name: DB
            valueFrom:
              secretKeyRef:
                name: a4p-mgmt-secret
                key: db
                optional: false
          - name: PRODUSER
            valueFrom:
              secretKeyRef:
                name: a4p-mgmt-secret
                key: username
                optional: false
          - name: PRODPASS
            valueFrom:
              secretKeyRef:
                name: a4p-mgmt-secret
                key: password
                optional: false
          - name: SPA_HOST
            valueFrom:
              secretKeyRef:
                name: a4p-mgmt-secret
                key: spa_host
                optional: false
          - name: SPA_DB
            valueFrom:
              secretKeyRef:
                name: a4p-mgmt-secret
                key: spa_db
                optional: false
          - name: SPA_PRODUSER
            valueFrom:
              secretKeyRef:
                name: a4p-mgmt-secret
                key: spa_username
                optional: false
          - name: SPA_PRODPASS
            valueFrom:
              secretKeyRef:
                name: a4p-mgmt-secret
                key: spa_password
                optional: false
        imagePullPolicy: Always
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "service cron start; cat /dev/null > /etc/environment; echo ENVIRONMENT=prod >> /etc/environment; echo HOST=$HOST >> /etc/environment; echo DB=$DB >> /etc/environment; echo PRODUSER=$PRODUSER >> /etc/environment; echo PRODPASS=$PRODPASS >> /etc/environment; echo SPA_HOST=$SPA_HOST >> /etc/environment; echo SPA_DB=$SPA_DB >> /etc/environment; echo SPA_PRODUSER=$SPA_PRODUSER >> /etc/environment; echo SPA_PRODPASS=$SPA_PRODPASS >> /etc/environment; php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"; php composer-setup.php --install-dir=/usr/local/bin --filename=composer; php -r \"unlink('composer-setup.php');\"; cd /code/src/; composer require minishlink/web-push"]
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
      imagePullSecrets:
      - name: mgmt-registry-credentials 
      restartPolicy: Always
      serviceAccountName: ""